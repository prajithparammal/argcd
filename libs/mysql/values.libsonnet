{
  image: {
    registry: 'docker.io',
    repository: 'bitnami/mysql',
    tag: '8.0.23-debian-10-r28',
    pullPolicy: 'IfNotPresent',
    pullSecrets: [],
    debug: false,
  },
  clusterDomain: 'cluster.local',
  commonAnnotations: {},
  commonLabels: {},
  architecture: 'standalone',
  auth: {
    rootPassword: '',
    database: 'my_database',
    username: '',
    password: '',
    replicationUser: 'replicator',
    replicationPassword: '',
    forcePassword: false,
    usePasswordFiles: false,
    customPasswordFiles: {},
  },
  initdbScripts: {},
  primary: {
    command: [],
    args: [],
    hostAliases: [],
    configuration: '[mysqld]\ndefault_authentication_plugin=mysql_native_password\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mysql\nplugin_dir=/opt/bitnami/mysql/plugin\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndatadir=/bitnami/mysql/data\ntmpdir=/opt/bitnami/mysql/tmp\nmax_allowed_packet=16M\nbind-address=0.0.0.0\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid\nlog-error=/opt/bitnami/mysql/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\n\n[client]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mysql/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid',
    updateStrategy: 'RollingUpdate',
    podAnnotations: {},
    podAffinityPreset: '',
    podAntiAffinityPreset: 'soft',
    nodeAffinityPreset: {
      type: '',
      key: '',
      values: [],
    },
    affinity: {},
    nodeSelector: {},
    tolerations: [],
    podSecurityContext: {
      enabled: true,
      fsGroup: 1001,
    },
    containerSecurityContext: {
      enabled: true,
      runAsUser: 1001,
    },
    resources: {
      limits: {},
      requests: {},
    },
    livenessProbe: {
      enabled: true,
      initialDelaySeconds: 120,
      periodSeconds: 10,
      timeoutSeconds: 1,
      failureThreshold: 3,
      successThreshold: 1,
    },
    readinessProbe: {
      enabled: true,
      initialDelaySeconds: 30,
      periodSeconds: 10,
      timeoutSeconds: 1,
      failureThreshold: 3,
      successThreshold: 1,
    },
    customLivenessProbe: {},
    customReadinessProbe: {},
    extraFlags: '',
    extraEnvVars: [],
    extraEnvVarsCM: '',
    extraEnvVarsSecret: '',
    persistence: {
      enabled: true,
      annotations: {},
      accessModes: [
        'ReadWriteOnce',
      ],
      size: '8Gi',
      selector: {},
    },
    extraVolumes: [],
    extraVolumeMounts: [],
    initContainers: [],
    sidecars: [],
    service: {
      type: 'ClusterIP',
      port: 3306,
      nodePort: '',
      clusterIP: '',
      loadBalancerIP: '',
      externalTrafficPolicy: 'Cluster',
      loadBalancerSourceRanges: [],
      annotations: {},
    },
    pdb: {
      enabled: false,
      minAvailable: 1,
    },
  },
  secondary: {
    replicaCount: 1,
    hostAliases: [],
    command: [],
    args: [],
    configuration: '[mysqld]\ndefault_authentication_plugin=mysql_native_password\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mysql\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndatadir=/bitnami/mysql/data\ntmpdir=/opt/bitnami/mysql/tmp\nmax_allowed_packet=16M\nbind-address=0.0.0.0\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid\nlog-error=/opt/bitnami/mysql/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\n\n[client]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndefault-character-set=UTF8\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid',
    updateStrategy: 'RollingUpdate',
    podAnnotations: {},
    podAffinityPreset: '',
    podAntiAffinityPreset: 'soft',
    nodeAffinityPreset: {
      type: '',
      key: '',
      values: [],
    },
    affinity: {},
    nodeSelector: {},
    tolerations: [],
    podSecurityContext: {
      enabled: true,
      fsGroup: 1001,
    },
    containerSecurityContext: {
      enabled: true,
      runAsUser: 1001,
    },
    resources: {
      limits: {},
      requests: {},
    },
    livenessProbe: {
      enabled: true,
      initialDelaySeconds: 120,
      periodSeconds: 10,
      timeoutSeconds: 1,
      failureThreshold: 3,
      successThreshold: 1,
    },
    readinessProbe: {
      enabled: true,
      initialDelaySeconds: 30,
      periodSeconds: 10,
      timeoutSeconds: 1,
      failureThreshold: 3,
      successThreshold: 1,
    },
    customLivenessProbe: {},
    customReadinessProbe: {},
    extraFlags: '',
    extraEnvVars: [],
    extraEnvVarsCM: '',
    extraEnvVarsSecret: '',
    persistence: {
      enabled: true,
      annotations: {},
      accessModes: [
        'ReadWriteOnce',
      ],
      size: '8Gi',
      selector: {},
    },
    extraVolumes: [],
    extraVolumeMounts: [],
    initContainers: [],
    sidecars: [],
    service: {
      type: 'ClusterIP',
      port: 3306,
      nodePort: '',
      clusterIP: '',
      loadBalancerIP: '',
      externalTrafficPolicy: 'Cluster',
      loadBalancerSourceRanges: [],
      annotations: {},
    },
    pdb: {
      enabled: false,
      minAvailable: 1,
    },
  },
  serviceAccount: {
    create: true,
    annotations: {},
  },
  rbac: {
    create: false,
  },
  volumePermissions: {
    enabled: false,
    image: {
      registry: 'docker.io',
      repository: 'bitnami/minideb',
      tag: 'buster',
      pullPolicy: 'Always',
    },
    resources: {},
  },
  metrics: {
    enabled: false,
    image: {
      registry: 'docker.io',
      repository: 'bitnami/mysqld-exporter',
      tag: '0.12.1-debian-10-r354',
      pullPolicy: 'IfNotPresent',
    },
    service: {
      type: 'ClusterIP',
      port: 9104,
      annotations: {
        'prometheus.io/scrape': 'true',
        'prometheus.io/port': '{{ .Values.metrics.service.port }}',
      },
    },
    extraArgs: {
      primary: [],
      secondary: [],
    },
    resources: {
      limits: {},
      requests: {},
    },
    livenessProbe: {
      enabled: true,
      initialDelaySeconds: 120,
      periodSeconds: 10,
      timeoutSeconds: 1,
      successThreshold: 1,
      failureThreshold: 3,
    },
    readinessProbe: {
      enabled: true,
      initialDelaySeconds: 30,
      periodSeconds: 10,
      timeoutSeconds: 1,
      successThreshold: 1,
      failureThreshold: 3,
    },
    serviceMonitor: {
      enabled: false,
      interval: '30s',
      honorLabels: false,
      additionalLabels: {},
    },
  },
  extraDeploy: [],
}